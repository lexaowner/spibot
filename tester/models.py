from django.utils import timezone
from django.db import models
from django.utils.translation import gettext as _
from smart_selects.db_fields import ChainedForeignKey
from django.urls import reverse
from django.contrib.auth.models import User


class Person(models.Model):
    user_name = models.OneToOneField('auth.User', default=True, null=True, on_delete=models.PROTECT, verbose_name="–û–ø–µ—Ä–∞—Ç–æ—Ä")
    name = models.CharField(max_length=32, verbose_name='–ò–º—è')
    # email = models.EmailField(blank=True, null=True)

    ROLES = [
        ('operator', '–û–ø–µ—Ä–∞—Ç–æ—Äüìû'),
        ('master', '–ú–∞—Å—Ç–µ—Äüõ†'),
        ('admin', '–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—åüë∂'),
        ('god', '–ë–æ–∂–µ–Ω—å–∫–∞üß¨'),
        (None, '–ù–∏–∫—Ç–æ'),
    ]

    permissions = models.CharField(max_length=32, choices=ROLES, default=None, null=True, verbose_name='–†–æ–ª—å')

    def __str__(self):
        return f"–ò–º—è: {self.name} | –ö–ª–∏–∫—É—Ö–∞: {self.user_name} | {self.permissions}"

    def get_url(self):
        return reverse('User-name', args=[self.name])

    class Meta:
        verbose_name = '–ó–∞–¥—Ä–æ—Ç'
        verbose_name_plural = '–ó–∞–¥—Ä–æ—Ç—ã'


class Region(models.Model):
    name = models.CharField(max_length=64, verbose_name=_('–†–µ–≥–∏–æ–Ω'))

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–†–µ–≥–∏–æ–Ω'
        verbose_name_plural = '–†–µ–≥–∏–æ–Ω—ã'


class District(models.Model):
    region = models.ForeignKey('Region', on_delete=models.CASCADE, verbose_name=_('–†–µ–≥–∏–æ–Ω'))
    name = models.CharField(max_length=64, verbose_name=_('–†–∞–π–æ–Ω'))

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–†–∞–π–æ–Ω'
        verbose_name_plural = '–†–∞–π–æ–Ω—ã'


class Street(models.Model):
    district = models.ForeignKey('District', on_delete=models.CASCADE, verbose_name=_('–†–∞–π–æ–Ω'))
    name = models.CharField(max_length=64, verbose_name=_('name'))

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–£–ª–∏—Ü–∞'
        verbose_name_plural = '–£–ª–∏—Ü—ã'


class House(models.Model):
    street = models.ForeignKey('Street', on_delete=models.CASCADE, verbose_name=_('–£–ª–∏—Ü–∞'))
    name = models.CharField(max_length=64, verbose_name=_('–î–æ–º'))
    apartment = models.CharField(max_length=16, blank=True, null=True, verbose_name=('–ö–≤–∞—Ä—Ç–∏—Ä–∞'))

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–î–æ–º'
        verbose_name_plural = '–î–æ–º–∞'


class TicketType(models.Model):
    TYPE = [
        ('repair', '–†–µ–º–æ–Ω—Ç'),
        ('settings', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞'),
        ('transfer', '–ü–µ—Ä–µ–Ω–æ—Å'),
        ('shutdown', '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ'),
        ('installation', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞'),
    ]

    type = models.CharField(max_length=32, choices=TYPE, default='repair', verbose_name="–¢–∏–ø –∑–∞—è–≤–∫–∏")

    def __str__(self):
        return self.type

    class Meta:
        verbose_name = '–¢–∏–ø –∑–∞—è–≤–∫–∏'
        verbose_name_plural = '–¢–∏–ø –∑–∞—è–≤–∫–∏'


class Ticket(models.Model):
    # identify = models.CharField(max_length=32, verbose_name=_('identify'))

    district = models.ForeignKey("District", on_delete=models.PROTECT, verbose_name=('–†–∞–π–æ–Ω'))
    street = ChainedForeignKey("Street", chained_field='district', chained_model_field='district', show_all=False)

    # house = models.ForeignKey('House', on_delete=models.CASCADE, verbose_name=_('–î–æ–º'))
    house = models.CharField(max_length=16, verbose_name=_('–î–æ–º'))
    apartment = models.CharField(max_length=32, verbose_name=_('–ö–≤–∞—Ä—Ç–∏—Ä–∞'), blank=True, null=True)

    date = models.DateTimeField(editable=True, default=timezone.now, verbose_name="–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è")
    closed_date = models.DateTimeField(editable=True, null=True, blank=True, verbose_name="–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è")

    completion_date = models.DateTimeField(default=None, null=True, blank=True, editable=True,
                                           verbose_name="–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    login = models.CharField(blank=True, max_length=15, null=True, verbose_name="–õ–æ–≥–∏–Ω")

    first_contact = models.CharField(max_length=13, null=True, verbose_name="–û—Å–Ω–æ–≤–Ω–æ–π –Ω–æ–º–µ—Ä", default=None)
    second_contact = models.CharField(max_length=13, blank=True, null=True, verbose_name="–î–æ–ø. –Ω–æ–º–µ—Ä", default=None)

    comment_master = models.TextField(blank=True, null=True, verbose_name="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–∞—Å—Ç–µ—Ä–∞", default=None)
    comment_operator = models.TextField(blank=True, null=True, verbose_name="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", default=None)

    update = models.DateTimeField(default=timezone.now, editable=False, verbose_name="–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    operator = models.ForeignKey('Person', default=True ,on_delete=models.PROTECT, verbose_name="–û–ø–µ—Ä–∞—Ç–æ—Ä")

    type = models.ForeignKey('TicketType', blank=True, null=True, on_delete=models.PROTECT, verbose_name="–¢–∏–ø –∑–∞—è–≤–∫–∏")

    # master = models.ForeignKey(Human, null=True, blank=True, on_delete=models.PROTECT, verbose_name="–ú–∞—Å—Ç–µ—Ä")

    def __str__(self):
        return f'{self.street} | {self.apartment}'

    class Meta:
        verbose_name = '–ó–∞—è–≤–∫–∞'
        verbose_name_plural = '–ó–∞—è–≤–∫–∏'

    def get_url(self):
        return reverse('ticket-form', args=[self.id])

    def get_full_address(self):
        return f'{self.district}, {self.street}, {self.house}'
