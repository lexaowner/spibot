# Generated by Django 4.2.5 on 2023-10-13 01:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        ('tester', '0016_alter_ticket_operator'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalTicket',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('house', models.CharField(max_length=16, verbose_name='Дом')),
                ('apartment', models.CharField(blank=True, max_length=32, null=True, verbose_name='Квартира')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата открытия')),
                ('closed_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('completion_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Дата выполнения')),
                ('login', models.CharField(blank=True, max_length=15, null=True, verbose_name='Логин')),
                ('first_contact', models.CharField(default=None, max_length=13, null=True, verbose_name='Основной номер')),
                ('second_contact', models.CharField(blank=True, default=None, max_length=13, null=True, verbose_name='Доп. номер')),
                ('comment_master', models.TextField(blank=True, default=None, null=True, verbose_name='Комментарий мастера')),
                ('comment_operator', models.TextField(blank=True, default=None, null=True, verbose_name='Комментарий оператора')),
                ('update', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата обновления')),
                ('type', models.CharField(choices=[('Ремонт', 'Ремонт'), ('Настройка', 'Настройка'), ('Перенос', 'Перенос'), ('Отключение', 'Отключение'), ('Установка', 'Установка')], max_length=13, verbose_name='Тип заявки')),
                ('priority', models.CharField(choices=[('Обычный', 'Обычный'), ('Срочный', 'Срочный'), ('Корпоративный', 'Корпоративный')], default='Обычный', max_length=13, verbose_name='Приоритет')),
                ('status', models.BooleanField(choices=[(True, 'Открыта'), (False, 'Закрыта')], default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tester.district', verbose_name='Район')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('master', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Мастер')),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Оператор')),
                ('street', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='district', chained_model_field='district', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tester.street')),
            ],
            options={
                'verbose_name': 'historical Заявка',
                'verbose_name_plural': 'historical Заявки',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
